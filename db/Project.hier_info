|fill
PS2_CLK <> updatePixel:inst.port1
PS2_DAT <> updatePixel:inst.port2
CLOCK_50 => CLOCK_50.IN2
KEY[0] => resetn.IN2
KEY[1] => clear.IN1
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
SW[0] => ~NO_FANOUT~
SW[1] => ~NO_FANOUT~
SW[2] => ~NO_FANOUT~
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => ~NO_FANOUT~
SW[9] => ~NO_FANOUT~
VGA_CLK <= vga_adapter:VGA.VGA_CLK
VGA_HS <= vga_adapter:VGA.VGA_HS
VGA_VS <= vga_adapter:VGA.VGA_VS
VGA_BLANK_N <= vga_adapter:VGA.VGA_BLANK
VGA_SYNC_N <= vga_adapter:VGA.VGA_SYNC
VGA_R[0] <= vga_adapter:VGA.VGA_R
VGA_R[1] <= vga_adapter:VGA.VGA_R
VGA_R[2] <= vga_adapter:VGA.VGA_R
VGA_R[3] <= vga_adapter:VGA.VGA_R
VGA_R[4] <= vga_adapter:VGA.VGA_R
VGA_R[5] <= vga_adapter:VGA.VGA_R
VGA_R[6] <= vga_adapter:VGA.VGA_R
VGA_R[7] <= vga_adapter:VGA.VGA_R
VGA_G[0] <= vga_adapter:VGA.VGA_G
VGA_G[1] <= vga_adapter:VGA.VGA_G
VGA_G[2] <= vga_adapter:VGA.VGA_G
VGA_G[3] <= vga_adapter:VGA.VGA_G
VGA_G[4] <= vga_adapter:VGA.VGA_G
VGA_G[5] <= vga_adapter:VGA.VGA_G
VGA_G[6] <= vga_adapter:VGA.VGA_G
VGA_G[7] <= vga_adapter:VGA.VGA_G
VGA_B[0] <= vga_adapter:VGA.VGA_B
VGA_B[1] <= vga_adapter:VGA.VGA_B
VGA_B[2] <= vga_adapter:VGA.VGA_B
VGA_B[3] <= vga_adapter:VGA.VGA_B
VGA_B[4] <= vga_adapter:VGA.VGA_B
VGA_B[5] <= vga_adapter:VGA.VGA_B
VGA_B[6] <= vga_adapter:VGA.VGA_B
VGA_B[7] <= vga_adapter:VGA.VGA_B
HEX0[0] <= updatePixel:inst.port9
HEX0[1] <= updatePixel:inst.port9
HEX0[2] <= updatePixel:inst.port9
HEX0[3] <= updatePixel:inst.port9
HEX0[4] <= updatePixel:inst.port9
HEX0[5] <= updatePixel:inst.port9
HEX0[6] <= updatePixel:inst.port9
HEX1[0] <= updatePixel:inst.port10
HEX1[1] <= updatePixel:inst.port10
HEX1[2] <= updatePixel:inst.port10
HEX1[3] <= updatePixel:inst.port10
HEX1[4] <= updatePixel:inst.port10
HEX1[5] <= updatePixel:inst.port10
HEX1[6] <= updatePixel:inst.port10
HEX2[0] <= updatePixel:inst.port11
HEX2[1] <= updatePixel:inst.port11
HEX2[2] <= updatePixel:inst.port11
HEX2[3] <= updatePixel:inst.port11
HEX2[4] <= updatePixel:inst.port11
HEX2[5] <= updatePixel:inst.port11
HEX2[6] <= updatePixel:inst.port11
HEX3[0] <= updatePixel:inst.port12
HEX3[1] <= updatePixel:inst.port12
HEX3[2] <= updatePixel:inst.port12
HEX3[3] <= updatePixel:inst.port12
HEX3[4] <= updatePixel:inst.port12
HEX3[5] <= updatePixel:inst.port12
HEX3[6] <= updatePixel:inst.port12
HEX4[0] <= updatePixel:inst.port13
HEX4[1] <= updatePixel:inst.port13
HEX4[2] <= updatePixel:inst.port13
HEX4[3] <= updatePixel:inst.port13
HEX4[4] <= updatePixel:inst.port13
HEX4[5] <= updatePixel:inst.port13
HEX4[6] <= updatePixel:inst.port13
HEX5[0] <= updatePixel:inst.port14
HEX5[1] <= updatePixel:inst.port14
HEX5[2] <= updatePixel:inst.port14
HEX5[3] <= updatePixel:inst.port14
HEX5[4] <= updatePixel:inst.port14
HEX5[5] <= updatePixel:inst.port14
HEX5[6] <= updatePixel:inst.port14
LEDR[0] <= updatePixel:inst.port15
LEDR[1] <= updatePixel:inst.port15
LEDR[2] <= updatePixel:inst.port15
LEDR[3] <= updatePixel:inst.port15
LEDR[4] <= updatePixel:inst.port15
LEDR[5] <= updatePixel:inst.port15
LEDR[6] <= updatePixel:inst.port15
LEDR[7] <= updatePixel:inst.port15
LEDR[8] <= updatePixel:inst.port15
LEDR[9] <= updatePixel:inst.port15


|fill|vga_adapter:VGA
resetn => resetn.IN1
clock => clock.IN2
colour[0] => colour[0].IN1
colour[1] => colour[1].IN1
colour[2] => colour[2].IN1
x[0] => x[0].IN1
x[1] => x[1].IN1
x[2] => x[2].IN1
x[3] => x[3].IN1
x[4] => x[4].IN1
x[5] => x[5].IN1
x[6] => x[6].IN1
x[7] => x[7].IN1
y[0] => y[0].IN1
y[1] => y[1].IN1
y[2] => y[2].IN1
y[3] => y[3].IN1
y[4] => y[4].IN1
y[5] => y[5].IN1
y[6] => y[6].IN1
plot => writeEn.IN1
VGA_R[0] <= vga_controller:controller.VGA_R
VGA_R[1] <= vga_controller:controller.VGA_R
VGA_R[2] <= vga_controller:controller.VGA_R
VGA_R[3] <= vga_controller:controller.VGA_R
VGA_R[4] <= vga_controller:controller.VGA_R
VGA_R[5] <= vga_controller:controller.VGA_R
VGA_R[6] <= vga_controller:controller.VGA_R
VGA_R[7] <= vga_controller:controller.VGA_R
VGA_G[0] <= vga_controller:controller.VGA_G
VGA_G[1] <= vga_controller:controller.VGA_G
VGA_G[2] <= vga_controller:controller.VGA_G
VGA_G[3] <= vga_controller:controller.VGA_G
VGA_G[4] <= vga_controller:controller.VGA_G
VGA_G[5] <= vga_controller:controller.VGA_G
VGA_G[6] <= vga_controller:controller.VGA_G
VGA_G[7] <= vga_controller:controller.VGA_G
VGA_B[0] <= vga_controller:controller.VGA_B
VGA_B[1] <= vga_controller:controller.VGA_B
VGA_B[2] <= vga_controller:controller.VGA_B
VGA_B[3] <= vga_controller:controller.VGA_B
VGA_B[4] <= vga_controller:controller.VGA_B
VGA_B[5] <= vga_controller:controller.VGA_B
VGA_B[6] <= vga_controller:controller.VGA_B
VGA_B[7] <= vga_controller:controller.VGA_B
VGA_HS <= vga_controller:controller.VGA_HS
VGA_VS <= vga_controller:controller.VGA_VS
VGA_BLANK <= vga_controller:controller.VGA_BLANK
VGA_SYNC <= vga_controller:controller.VGA_SYNC
VGA_CLK <= vga_controller:controller.VGA_CLK


|fill|vga_adapter:VGA|vga_address_translator:user_input_translator
x[0] => mem_address[0].DATAIN
x[1] => mem_address[1].DATAIN
x[2] => mem_address[2].DATAIN
x[3] => mem_address[3].DATAIN
x[4] => mem_address[4].DATAIN
x[5] => Add1.IN18
x[6] => Add1.IN17
x[7] => Add1.IN16
y[0] => Add0.IN14
y[0] => Add1.IN20
y[1] => Add0.IN13
y[1] => Add1.IN19
y[2] => Add0.IN11
y[2] => Add0.IN12
y[3] => Add0.IN9
y[3] => Add0.IN10
y[4] => Add0.IN7
y[4] => Add0.IN8
y[5] => Add0.IN5
y[5] => Add0.IN6
y[6] => Add0.IN3
y[6] => Add0.IN4
mem_address[0] <= x[0].DB_MAX_OUTPUT_PORT_TYPE
mem_address[1] <= x[1].DB_MAX_OUTPUT_PORT_TYPE
mem_address[2] <= x[2].DB_MAX_OUTPUT_PORT_TYPE
mem_address[3] <= x[3].DB_MAX_OUTPUT_PORT_TYPE
mem_address[4] <= x[4].DB_MAX_OUTPUT_PORT_TYPE
mem_address[5] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[6] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[7] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[8] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[9] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[10] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[11] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[12] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[13] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[14] <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|fill|vga_adapter:VGA|altsyncram:VideoMemory
wren_a => altsyncram_m6m1:auto_generated.wren_a
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => altsyncram_m6m1:auto_generated.data_a[0]
data_a[1] => altsyncram_m6m1:auto_generated.data_a[1]
data_a[2] => altsyncram_m6m1:auto_generated.data_a[2]
data_b[0] => ~NO_FANOUT~
data_b[1] => ~NO_FANOUT~
data_b[2] => ~NO_FANOUT~
address_a[0] => altsyncram_m6m1:auto_generated.address_a[0]
address_a[1] => altsyncram_m6m1:auto_generated.address_a[1]
address_a[2] => altsyncram_m6m1:auto_generated.address_a[2]
address_a[3] => altsyncram_m6m1:auto_generated.address_a[3]
address_a[4] => altsyncram_m6m1:auto_generated.address_a[4]
address_a[5] => altsyncram_m6m1:auto_generated.address_a[5]
address_a[6] => altsyncram_m6m1:auto_generated.address_a[6]
address_a[7] => altsyncram_m6m1:auto_generated.address_a[7]
address_a[8] => altsyncram_m6m1:auto_generated.address_a[8]
address_a[9] => altsyncram_m6m1:auto_generated.address_a[9]
address_a[10] => altsyncram_m6m1:auto_generated.address_a[10]
address_a[11] => altsyncram_m6m1:auto_generated.address_a[11]
address_a[12] => altsyncram_m6m1:auto_generated.address_a[12]
address_a[13] => altsyncram_m6m1:auto_generated.address_a[13]
address_a[14] => altsyncram_m6m1:auto_generated.address_a[14]
address_b[0] => altsyncram_m6m1:auto_generated.address_b[0]
address_b[1] => altsyncram_m6m1:auto_generated.address_b[1]
address_b[2] => altsyncram_m6m1:auto_generated.address_b[2]
address_b[3] => altsyncram_m6m1:auto_generated.address_b[3]
address_b[4] => altsyncram_m6m1:auto_generated.address_b[4]
address_b[5] => altsyncram_m6m1:auto_generated.address_b[5]
address_b[6] => altsyncram_m6m1:auto_generated.address_b[6]
address_b[7] => altsyncram_m6m1:auto_generated.address_b[7]
address_b[8] => altsyncram_m6m1:auto_generated.address_b[8]
address_b[9] => altsyncram_m6m1:auto_generated.address_b[9]
address_b[10] => altsyncram_m6m1:auto_generated.address_b[10]
address_b[11] => altsyncram_m6m1:auto_generated.address_b[11]
address_b[12] => altsyncram_m6m1:auto_generated.address_b[12]
address_b[13] => altsyncram_m6m1:auto_generated.address_b[13]
address_b[14] => altsyncram_m6m1:auto_generated.address_b[14]
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_m6m1:auto_generated.clock0
clock1 => altsyncram_m6m1:auto_generated.clock1
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= <GND>
q_a[1] <= <GND>
q_a[2] <= <GND>
q_b[0] <= altsyncram_m6m1:auto_generated.q_b[0]
q_b[1] <= altsyncram_m6m1:auto_generated.q_b[1]
q_b[2] <= altsyncram_m6m1:auto_generated.q_b[2]
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|fill|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_m6m1:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[0] => ram_block1a8.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[1] => ram_block1a8.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[2] => ram_block1a8.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[3] => ram_block1a8.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[4] => ram_block1a8.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[5] => ram_block1a7.PORTAADDR5
address_a[5] => ram_block1a8.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[6] => ram_block1a7.PORTAADDR6
address_a[6] => ram_block1a8.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[7] => ram_block1a7.PORTAADDR7
address_a[7] => ram_block1a8.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[8] => ram_block1a4.PORTAADDR8
address_a[8] => ram_block1a5.PORTAADDR8
address_a[8] => ram_block1a6.PORTAADDR8
address_a[8] => ram_block1a7.PORTAADDR8
address_a[8] => ram_block1a8.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[9] => ram_block1a2.PORTAADDR9
address_a[9] => ram_block1a3.PORTAADDR9
address_a[9] => ram_block1a4.PORTAADDR9
address_a[9] => ram_block1a5.PORTAADDR9
address_a[9] => ram_block1a6.PORTAADDR9
address_a[9] => ram_block1a7.PORTAADDR9
address_a[9] => ram_block1a8.PORTAADDR9
address_a[10] => ram_block1a0.PORTAADDR10
address_a[10] => ram_block1a1.PORTAADDR10
address_a[10] => ram_block1a2.PORTAADDR10
address_a[10] => ram_block1a3.PORTAADDR10
address_a[10] => ram_block1a4.PORTAADDR10
address_a[10] => ram_block1a5.PORTAADDR10
address_a[10] => ram_block1a6.PORTAADDR10
address_a[10] => ram_block1a7.PORTAADDR10
address_a[10] => ram_block1a8.PORTAADDR10
address_a[11] => ram_block1a0.PORTAADDR11
address_a[11] => ram_block1a1.PORTAADDR11
address_a[11] => ram_block1a2.PORTAADDR11
address_a[11] => ram_block1a3.PORTAADDR11
address_a[11] => ram_block1a4.PORTAADDR11
address_a[11] => ram_block1a5.PORTAADDR11
address_a[11] => ram_block1a6.PORTAADDR11
address_a[11] => ram_block1a7.PORTAADDR11
address_a[11] => ram_block1a8.PORTAADDR11
address_a[12] => ram_block1a0.PORTAADDR12
address_a[12] => ram_block1a1.PORTAADDR12
address_a[12] => ram_block1a2.PORTAADDR12
address_a[12] => ram_block1a3.PORTAADDR12
address_a[12] => ram_block1a4.PORTAADDR12
address_a[12] => ram_block1a5.PORTAADDR12
address_a[13] => decode_7la:decode2.data[0]
address_a[13] => decode_7la:wren_decode_a.data[0]
address_a[14] => decode_7la:decode2.data[1]
address_a[14] => decode_7la:wren_decode_a.data[1]
address_b[0] => ram_block1a0.PORTBADDR
address_b[0] => ram_block1a1.PORTBADDR
address_b[0] => ram_block1a2.PORTBADDR
address_b[0] => ram_block1a3.PORTBADDR
address_b[0] => ram_block1a4.PORTBADDR
address_b[0] => ram_block1a5.PORTBADDR
address_b[0] => ram_block1a6.PORTBADDR
address_b[0] => ram_block1a7.PORTBADDR
address_b[0] => ram_block1a8.PORTBADDR
address_b[1] => ram_block1a0.PORTBADDR1
address_b[1] => ram_block1a1.PORTBADDR1
address_b[1] => ram_block1a2.PORTBADDR1
address_b[1] => ram_block1a3.PORTBADDR1
address_b[1] => ram_block1a4.PORTBADDR1
address_b[1] => ram_block1a5.PORTBADDR1
address_b[1] => ram_block1a6.PORTBADDR1
address_b[1] => ram_block1a7.PORTBADDR1
address_b[1] => ram_block1a8.PORTBADDR1
address_b[2] => ram_block1a0.PORTBADDR2
address_b[2] => ram_block1a1.PORTBADDR2
address_b[2] => ram_block1a2.PORTBADDR2
address_b[2] => ram_block1a3.PORTBADDR2
address_b[2] => ram_block1a4.PORTBADDR2
address_b[2] => ram_block1a5.PORTBADDR2
address_b[2] => ram_block1a6.PORTBADDR2
address_b[2] => ram_block1a7.PORTBADDR2
address_b[2] => ram_block1a8.PORTBADDR2
address_b[3] => ram_block1a0.PORTBADDR3
address_b[3] => ram_block1a1.PORTBADDR3
address_b[3] => ram_block1a2.PORTBADDR3
address_b[3] => ram_block1a3.PORTBADDR3
address_b[3] => ram_block1a4.PORTBADDR3
address_b[3] => ram_block1a5.PORTBADDR3
address_b[3] => ram_block1a6.PORTBADDR3
address_b[3] => ram_block1a7.PORTBADDR3
address_b[3] => ram_block1a8.PORTBADDR3
address_b[4] => ram_block1a0.PORTBADDR4
address_b[4] => ram_block1a1.PORTBADDR4
address_b[4] => ram_block1a2.PORTBADDR4
address_b[4] => ram_block1a3.PORTBADDR4
address_b[4] => ram_block1a4.PORTBADDR4
address_b[4] => ram_block1a5.PORTBADDR4
address_b[4] => ram_block1a6.PORTBADDR4
address_b[4] => ram_block1a7.PORTBADDR4
address_b[4] => ram_block1a8.PORTBADDR4
address_b[5] => ram_block1a0.PORTBADDR5
address_b[5] => ram_block1a1.PORTBADDR5
address_b[5] => ram_block1a2.PORTBADDR5
address_b[5] => ram_block1a3.PORTBADDR5
address_b[5] => ram_block1a4.PORTBADDR5
address_b[5] => ram_block1a5.PORTBADDR5
address_b[5] => ram_block1a6.PORTBADDR5
address_b[5] => ram_block1a7.PORTBADDR5
address_b[5] => ram_block1a8.PORTBADDR5
address_b[6] => ram_block1a0.PORTBADDR6
address_b[6] => ram_block1a1.PORTBADDR6
address_b[6] => ram_block1a2.PORTBADDR6
address_b[6] => ram_block1a3.PORTBADDR6
address_b[6] => ram_block1a4.PORTBADDR6
address_b[6] => ram_block1a5.PORTBADDR6
address_b[6] => ram_block1a6.PORTBADDR6
address_b[6] => ram_block1a7.PORTBADDR6
address_b[6] => ram_block1a8.PORTBADDR6
address_b[7] => ram_block1a0.PORTBADDR7
address_b[7] => ram_block1a1.PORTBADDR7
address_b[7] => ram_block1a2.PORTBADDR7
address_b[7] => ram_block1a3.PORTBADDR7
address_b[7] => ram_block1a4.PORTBADDR7
address_b[7] => ram_block1a5.PORTBADDR7
address_b[7] => ram_block1a6.PORTBADDR7
address_b[7] => ram_block1a7.PORTBADDR7
address_b[7] => ram_block1a8.PORTBADDR7
address_b[8] => ram_block1a0.PORTBADDR8
address_b[8] => ram_block1a1.PORTBADDR8
address_b[8] => ram_block1a2.PORTBADDR8
address_b[8] => ram_block1a3.PORTBADDR8
address_b[8] => ram_block1a4.PORTBADDR8
address_b[8] => ram_block1a5.PORTBADDR8
address_b[8] => ram_block1a6.PORTBADDR8
address_b[8] => ram_block1a7.PORTBADDR8
address_b[8] => ram_block1a8.PORTBADDR8
address_b[9] => ram_block1a0.PORTBADDR9
address_b[9] => ram_block1a1.PORTBADDR9
address_b[9] => ram_block1a2.PORTBADDR9
address_b[9] => ram_block1a3.PORTBADDR9
address_b[9] => ram_block1a4.PORTBADDR9
address_b[9] => ram_block1a5.PORTBADDR9
address_b[9] => ram_block1a6.PORTBADDR9
address_b[9] => ram_block1a7.PORTBADDR9
address_b[9] => ram_block1a8.PORTBADDR9
address_b[10] => ram_block1a0.PORTBADDR10
address_b[10] => ram_block1a1.PORTBADDR10
address_b[10] => ram_block1a2.PORTBADDR10
address_b[10] => ram_block1a3.PORTBADDR10
address_b[10] => ram_block1a4.PORTBADDR10
address_b[10] => ram_block1a5.PORTBADDR10
address_b[10] => ram_block1a6.PORTBADDR10
address_b[10] => ram_block1a7.PORTBADDR10
address_b[10] => ram_block1a8.PORTBADDR10
address_b[11] => ram_block1a0.PORTBADDR11
address_b[11] => ram_block1a1.PORTBADDR11
address_b[11] => ram_block1a2.PORTBADDR11
address_b[11] => ram_block1a3.PORTBADDR11
address_b[11] => ram_block1a4.PORTBADDR11
address_b[11] => ram_block1a5.PORTBADDR11
address_b[11] => ram_block1a6.PORTBADDR11
address_b[11] => ram_block1a7.PORTBADDR11
address_b[11] => ram_block1a8.PORTBADDR11
address_b[12] => ram_block1a0.PORTBADDR12
address_b[12] => ram_block1a1.PORTBADDR12
address_b[12] => ram_block1a2.PORTBADDR12
address_b[12] => ram_block1a3.PORTBADDR12
address_b[12] => ram_block1a4.PORTBADDR12
address_b[12] => ram_block1a5.PORTBADDR12
address_b[13] => address_reg_b[0].DATAIN
address_b[13] => decode_01a:rden_decode_b.data[0]
address_b[14] => address_reg_b[1].DATAIN
address_b[14] => decode_01a:rden_decode_b.data[1]
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
clock0 => ram_block1a8.CLK0
clock1 => ram_block1a0.CLK1
clock1 => ram_block1a1.CLK1
clock1 => ram_block1a2.CLK1
clock1 => ram_block1a3.CLK1
clock1 => ram_block1a4.CLK1
clock1 => ram_block1a5.CLK1
clock1 => ram_block1a6.CLK1
clock1 => ram_block1a7.CLK1
clock1 => ram_block1a8.CLK1
clock1 => address_reg_b[1].CLK
clock1 => address_reg_b[0].CLK
clock1 => out_address_reg_b[1].CLK
clock1 => out_address_reg_b[0].CLK
data_a[0] => ram_block1a0.PORTADATAIN
data_a[0] => ram_block1a3.PORTADATAIN
data_a[0] => ram_block1a6.PORTADATAIN
data_a[1] => ram_block1a1.PORTADATAIN
data_a[1] => ram_block1a4.PORTADATAIN
data_a[1] => ram_block1a7.PORTADATAIN
data_a[2] => ram_block1a2.PORTADATAIN
data_a[2] => ram_block1a5.PORTADATAIN
data_a[2] => ram_block1a8.PORTADATAIN
q_b[0] <= mux_ifb:mux3.result[0]
q_b[1] <= mux_ifb:mux3.result[1]
q_b[2] <= mux_ifb:mux3.result[2]
wren_a => decode_7la:decode2.enable
wren_a => decode_7la:wren_decode_a.enable


|fill|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_m6m1:auto_generated|decode_7la:decode2
data[0] => w_anode105w[1].IN0
data[0] => w_anode118w[1].IN1
data[0] => w_anode126w[1].IN0
data[0] => w_anode134w[1].IN1
data[1] => w_anode105w[2].IN0
data[1] => w_anode118w[2].IN0
data[1] => w_anode126w[2].IN1
data[1] => w_anode134w[2].IN1
enable => w_anode105w[1].IN0
enable => w_anode118w[1].IN0
enable => w_anode126w[1].IN0
enable => w_anode134w[1].IN0
eq[0] <= w_anode105w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= w_anode118w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= w_anode126w[2].DB_MAX_OUTPUT_PORT_TYPE


|fill|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_m6m1:auto_generated|decode_01a:rden_decode_b
data[0] => w_anode143w[1].IN0
data[0] => w_anode157w[1].IN1
data[0] => w_anode166w[1].IN0
data[0] => w_anode175w[1].IN1
data[1] => w_anode143w[2].IN0
data[1] => w_anode157w[2].IN0
data[1] => w_anode166w[2].IN1
data[1] => w_anode175w[2].IN1
eq[0] <= w_anode143w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= w_anode157w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= w_anode166w[2].DB_MAX_OUTPUT_PORT_TYPE


|fill|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_m6m1:auto_generated|decode_7la:wren_decode_a
data[0] => w_anode105w[1].IN0
data[0] => w_anode118w[1].IN1
data[0] => w_anode126w[1].IN0
data[0] => w_anode134w[1].IN1
data[1] => w_anode105w[2].IN0
data[1] => w_anode118w[2].IN0
data[1] => w_anode126w[2].IN1
data[1] => w_anode134w[2].IN1
enable => w_anode105w[1].IN0
enable => w_anode118w[1].IN0
enable => w_anode126w[1].IN0
enable => w_anode134w[1].IN0
eq[0] <= w_anode105w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= w_anode118w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= w_anode126w[2].DB_MAX_OUTPUT_PORT_TYPE


|fill|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_m6m1:auto_generated|mux_ifb:mux3
data[0] => data0_wire[0].IN0
data[1] => data0_wire[1].IN0
data[2] => data0_wire[2].IN0
data[3] => data1_wire[0].IN0
data[4] => data1_wire[1].IN0
data[5] => data1_wire[2].IN0
data[6] => data2_wire[0].IN0
data[7] => data2_wire[1].IN0
data[8] => data2_wire[2].IN0
result[0] <= result_node[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= result_node[1].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= result_node[2].DB_MAX_OUTPUT_PORT_TYPE
sel[0] => data0_wire[2].IN0
sel[0] => data1_wire[2].IN1
sel[0] => data1_wire[1].IN1
sel[0] => data1_wire[0].IN1
sel[1] => data2_wire[2].IN1
sel[1] => data2_wire[1].IN1
sel[1] => data2_wire[0].IN1
sel[1] => _.IN0


|fill|vga_adapter:VGA|vga_pll:mypll
clock_in => clock_input_bus[0].IN1
clock_out <= altpll:altpll_component.clk


|fill|vga_adapter:VGA|vga_pll:mypll|altpll:altpll_component
inclk[0] => altpll_80u:auto_generated.inclk[0]
inclk[1] => altpll_80u:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
clk[5] <= clk[5].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|fill|vga_adapter:VGA|vga_pll:mypll|altpll:altpll_component|altpll_80u:auto_generated
clk[0] <= generic_pll1.O_OUTCLK
clk[1] <= <GND>
clk[2] <= <GND>
clk[3] <= <GND>
clk[4] <= <GND>
clk[5] <= <GND>
fbout <= generic_pll1.O_FBOUTCLK
inclk[0] => generic_pll1.I_REFCLK
inclk[1] => ~NO_FANOUT~
locked <= generic_pll1.LOCKED


|fill|vga_adapter:VGA|vga_controller:controller
vga_clock => VGA_BLANK~reg0.CLK
vga_clock => VGA_VS~reg0.CLK
vga_clock => VGA_HS~reg0.CLK
vga_clock => VGA_BLANK1.CLK
vga_clock => VGA_VS1.CLK
vga_clock => VGA_HS1.CLK
vga_clock => yCounter[0].CLK
vga_clock => yCounter[1].CLK
vga_clock => yCounter[2].CLK
vga_clock => yCounter[3].CLK
vga_clock => yCounter[4].CLK
vga_clock => yCounter[5].CLK
vga_clock => yCounter[6].CLK
vga_clock => yCounter[7].CLK
vga_clock => yCounter[8].CLK
vga_clock => yCounter[9].CLK
vga_clock => xCounter[0].CLK
vga_clock => xCounter[1].CLK
vga_clock => xCounter[2].CLK
vga_clock => xCounter[3].CLK
vga_clock => xCounter[4].CLK
vga_clock => xCounter[5].CLK
vga_clock => xCounter[6].CLK
vga_clock => xCounter[7].CLK
vga_clock => xCounter[8].CLK
vga_clock => xCounter[9].CLK
vga_clock => VGA_CLK.DATAIN
resetn => xCounter[0].ACLR
resetn => xCounter[1].ACLR
resetn => xCounter[2].ACLR
resetn => xCounter[3].ACLR
resetn => xCounter[4].ACLR
resetn => xCounter[5].ACLR
resetn => xCounter[6].ACLR
resetn => xCounter[7].ACLR
resetn => xCounter[8].ACLR
resetn => xCounter[9].ACLR
resetn => yCounter[0].ACLR
resetn => yCounter[1].ACLR
resetn => yCounter[2].ACLR
resetn => yCounter[3].ACLR
resetn => yCounter[4].ACLR
resetn => yCounter[5].ACLR
resetn => yCounter[6].ACLR
resetn => yCounter[7].ACLR
resetn => yCounter[8].ACLR
resetn => yCounter[9].ACLR
pixel_colour[0] => VGA_B[0].DATAIN
pixel_colour[0] => VGA_B[9].DATAIN
pixel_colour[0] => VGA_B[8].DATAIN
pixel_colour[0] => VGA_B[7].DATAIN
pixel_colour[0] => VGA_B[6].DATAIN
pixel_colour[0] => VGA_B[5].DATAIN
pixel_colour[0] => VGA_B[4].DATAIN
pixel_colour[0] => VGA_B[3].DATAIN
pixel_colour[0] => VGA_B[2].DATAIN
pixel_colour[0] => VGA_B[1].DATAIN
pixel_colour[1] => VGA_G[0].DATAIN
pixel_colour[1] => VGA_G[9].DATAIN
pixel_colour[1] => VGA_G[8].DATAIN
pixel_colour[1] => VGA_G[7].DATAIN
pixel_colour[1] => VGA_G[6].DATAIN
pixel_colour[1] => VGA_G[5].DATAIN
pixel_colour[1] => VGA_G[4].DATAIN
pixel_colour[1] => VGA_G[3].DATAIN
pixel_colour[1] => VGA_G[2].DATAIN
pixel_colour[1] => VGA_G[1].DATAIN
pixel_colour[2] => VGA_R[0].DATAIN
pixel_colour[2] => VGA_R[9].DATAIN
pixel_colour[2] => VGA_R[8].DATAIN
pixel_colour[2] => VGA_R[7].DATAIN
pixel_colour[2] => VGA_R[6].DATAIN
pixel_colour[2] => VGA_R[5].DATAIN
pixel_colour[2] => VGA_R[4].DATAIN
pixel_colour[2] => VGA_R[3].DATAIN
pixel_colour[2] => VGA_R[2].DATAIN
pixel_colour[2] => VGA_R[1].DATAIN
memory_address[0] <= vga_address_translator:controller_translator.mem_address
memory_address[1] <= vga_address_translator:controller_translator.mem_address
memory_address[2] <= vga_address_translator:controller_translator.mem_address
memory_address[3] <= vga_address_translator:controller_translator.mem_address
memory_address[4] <= vga_address_translator:controller_translator.mem_address
memory_address[5] <= vga_address_translator:controller_translator.mem_address
memory_address[6] <= vga_address_translator:controller_translator.mem_address
memory_address[7] <= vga_address_translator:controller_translator.mem_address
memory_address[8] <= vga_address_translator:controller_translator.mem_address
memory_address[9] <= vga_address_translator:controller_translator.mem_address
memory_address[10] <= vga_address_translator:controller_translator.mem_address
memory_address[11] <= vga_address_translator:controller_translator.mem_address
memory_address[12] <= vga_address_translator:controller_translator.mem_address
memory_address[13] <= vga_address_translator:controller_translator.mem_address
memory_address[14] <= vga_address_translator:controller_translator.mem_address
VGA_R[0] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[1] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[2] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[3] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[4] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[5] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[6] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[7] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[8] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[9] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[0] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[1] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[2] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[3] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[4] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[5] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[6] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[7] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[8] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[9] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[0] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[1] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[2] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[3] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[4] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[5] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[6] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[7] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[8] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[9] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_HS <= VGA_HS~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_VS <= VGA_VS~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_BLANK <= VGA_BLANK~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_SYNC <= <VCC>
VGA_CLK <= vga_clock.DB_MAX_OUTPUT_PORT_TYPE


|fill|vga_adapter:VGA|vga_controller:controller|vga_address_translator:controller_translator
x[0] => mem_address[0].DATAIN
x[1] => mem_address[1].DATAIN
x[2] => mem_address[2].DATAIN
x[3] => mem_address[3].DATAIN
x[4] => mem_address[4].DATAIN
x[5] => Add1.IN18
x[6] => Add1.IN17
x[7] => Add1.IN16
y[0] => Add0.IN14
y[0] => Add1.IN20
y[1] => Add0.IN13
y[1] => Add1.IN19
y[2] => Add0.IN11
y[2] => Add0.IN12
y[3] => Add0.IN9
y[3] => Add0.IN10
y[4] => Add0.IN7
y[4] => Add0.IN8
y[5] => Add0.IN5
y[5] => Add0.IN6
y[6] => Add0.IN3
y[6] => Add0.IN4
mem_address[0] <= x[0].DB_MAX_OUTPUT_PORT_TYPE
mem_address[1] <= x[1].DB_MAX_OUTPUT_PORT_TYPE
mem_address[2] <= x[2].DB_MAX_OUTPUT_PORT_TYPE
mem_address[3] <= x[3].DB_MAX_OUTPUT_PORT_TYPE
mem_address[4] <= x[4].DB_MAX_OUTPUT_PORT_TYPE
mem_address[5] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[6] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[7] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[8] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[9] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[10] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[11] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[12] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[13] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[14] <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|fill|updatePixel:inst
clk => clk.IN1
ps2_clk <> mouseMove:inst.port2
ps2_dat <> mouseMove:inst.port3
resetn => _.IN1
clear => wren.IN1
clear => data_in.OUTPUTSELECT
clear => data_in.OUTPUTSELECT
clear => data_in.OUTPUTSELECT
dir[0] => ~NO_FANOUT~
dir[1] => ~NO_FANOUT~
dir[2] => ~NO_FANOUT~
x[0] <= x[0].DB_MAX_OUTPUT_PORT_TYPE
x[1] <= x[1].DB_MAX_OUTPUT_PORT_TYPE
x[2] <= x[2].DB_MAX_OUTPUT_PORT_TYPE
x[3] <= x[3].DB_MAX_OUTPUT_PORT_TYPE
x[4] <= x[4].DB_MAX_OUTPUT_PORT_TYPE
x[5] <= x[5].DB_MAX_OUTPUT_PORT_TYPE
x[6] <= x[6].DB_MAX_OUTPUT_PORT_TYPE
x[7] <= x[7].DB_MAX_OUTPUT_PORT_TYPE
y[0] <= y[0].DB_MAX_OUTPUT_PORT_TYPE
y[1] <= y[1].DB_MAX_OUTPUT_PORT_TYPE
y[2] <= y[2].DB_MAX_OUTPUT_PORT_TYPE
y[3] <= y[3].DB_MAX_OUTPUT_PORT_TYPE
y[4] <= y[4].DB_MAX_OUTPUT_PORT_TYPE
y[5] <= y[5].DB_MAX_OUTPUT_PORT_TYPE
y[6] <= y[6].DB_MAX_OUTPUT_PORT_TYPE
colourOut[0] <= colourOutReg[0].DB_MAX_OUTPUT_PORT_TYPE
colourOut[1] <= colourOutReg[1].DB_MAX_OUTPUT_PORT_TYPE
colourOut[2] <= colourOutReg[2].DB_MAX_OUTPUT_PORT_TYPE
hex0[0] <= Hexadecimal_To_Seven_Segment:inst1.port1
hex0[1] <= Hexadecimal_To_Seven_Segment:inst1.port1
hex0[2] <= Hexadecimal_To_Seven_Segment:inst1.port1
hex0[3] <= Hexadecimal_To_Seven_Segment:inst1.port1
hex0[4] <= Hexadecimal_To_Seven_Segment:inst1.port1
hex0[5] <= Hexadecimal_To_Seven_Segment:inst1.port1
hex0[6] <= Hexadecimal_To_Seven_Segment:inst1.port1
hex1[0] <= Hexadecimal_To_Seven_Segment:inst2.port1
hex1[1] <= Hexadecimal_To_Seven_Segment:inst2.port1
hex1[2] <= Hexadecimal_To_Seven_Segment:inst2.port1
hex1[3] <= Hexadecimal_To_Seven_Segment:inst2.port1
hex1[4] <= Hexadecimal_To_Seven_Segment:inst2.port1
hex1[5] <= Hexadecimal_To_Seven_Segment:inst2.port1
hex1[6] <= Hexadecimal_To_Seven_Segment:inst2.port1
hex2[0] <= Hexadecimal_To_Seven_Segment:inst3.port1
hex2[1] <= Hexadecimal_To_Seven_Segment:inst3.port1
hex2[2] <= Hexadecimal_To_Seven_Segment:inst3.port1
hex2[3] <= Hexadecimal_To_Seven_Segment:inst3.port1
hex2[4] <= Hexadecimal_To_Seven_Segment:inst3.port1
hex2[5] <= Hexadecimal_To_Seven_Segment:inst3.port1
hex2[6] <= Hexadecimal_To_Seven_Segment:inst3.port1
hex3[0] <= Hexadecimal_To_Seven_Segment:inst4.port1
hex3[1] <= Hexadecimal_To_Seven_Segment:inst4.port1
hex3[2] <= Hexadecimal_To_Seven_Segment:inst4.port1
hex3[3] <= Hexadecimal_To_Seven_Segment:inst4.port1
hex3[4] <= Hexadecimal_To_Seven_Segment:inst4.port1
hex3[5] <= Hexadecimal_To_Seven_Segment:inst4.port1
hex3[6] <= Hexadecimal_To_Seven_Segment:inst4.port1
hex4[0] <= Hexadecimal_To_Seven_Segment:inst5.port1
hex4[1] <= Hexadecimal_To_Seven_Segment:inst5.port1
hex4[2] <= Hexadecimal_To_Seven_Segment:inst5.port1
hex4[3] <= Hexadecimal_To_Seven_Segment:inst5.port1
hex4[4] <= Hexadecimal_To_Seven_Segment:inst5.port1
hex4[5] <= Hexadecimal_To_Seven_Segment:inst5.port1
hex4[6] <= Hexadecimal_To_Seven_Segment:inst5.port1
hex5[0] <= Hexadecimal_To_Seven_Segment:inst6.port1
hex5[1] <= Hexadecimal_To_Seven_Segment:inst6.port1
hex5[2] <= Hexadecimal_To_Seven_Segment:inst6.port1
hex5[3] <= Hexadecimal_To_Seven_Segment:inst6.port1
hex5[4] <= Hexadecimal_To_Seven_Segment:inst6.port1
hex5[5] <= Hexadecimal_To_Seven_Segment:inst6.port1
hex5[6] <= Hexadecimal_To_Seven_Segment:inst6.port1
ledr[0] <= mouseMove:inst.port4
ledr[1] <= mouseMove:inst.port4
ledr[2] <= mouseMove:inst.port4
ledr[3] <= mouseMove:inst.port4
ledr[4] <= <GND>
ledr[5] <= <GND>
ledr[6] <= <GND>
ledr[7] <= <GND>
ledr[8] <= <GND>
ledr[9] <= <GND>


|fill|updatePixel:inst|mouseMove:inst
reset => reset.IN1
clk => clk.IN1
ps2_clk <> MouseTransceiver:inst.port2
ps2_dat <> MouseTransceiver:inst.port3
mStatus[0] <= MouseTransceiver:inst.port4
mStatus[1] <= MouseTransceiver:inst.port4
mStatus[2] <= MouseTransceiver:inst.port4
mStatus[3] <= MouseTransceiver:inst.port4
mx[0] <= MouseTransceiver:inst.port5
mx[1] <= MouseTransceiver:inst.port5
mx[2] <= MouseTransceiver:inst.port5
mx[3] <= MouseTransceiver:inst.port5
mx[4] <= MouseTransceiver:inst.port5
mx[5] <= MouseTransceiver:inst.port5
mx[6] <= MouseTransceiver:inst.port5
mx[7] <= MouseTransceiver:inst.port5
my[0] <= MouseTransceiver:inst.port6
my[1] <= MouseTransceiver:inst.port6
my[2] <= MouseTransceiver:inst.port6
my[3] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
my[4] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
my[5] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
my[6] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
my[7] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
mz[0] <= MouseTransceiver:inst.port7
mz[1] <= MouseTransceiver:inst.port7
mz[2] <= MouseTransceiver:inst.port7
mz[3] <= MouseTransceiver:inst.port7
mz[4] <= MouseTransceiver:inst.port7
mz[5] <= MouseTransceiver:inst.port7
mz[6] <= MouseTransceiver:inst.port7
mz[7] <= MouseTransceiver:inst.port7


|fill|updatePixel:inst|mouseMove:inst|MouseTransceiver:inst
RESET => RESET.IN3
CLK => CLK.IN3
CLK_MOUSE <> CLK_MOUSE
DATA_MOUSE <> DATA_MOUSE
MouseStatus[0] <= MouseStatus[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MouseStatus[1] <= MouseStatus[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MouseStatus[2] <= MouseStatus[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MouseStatus[3] <= MouseStatus[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MouseX[0] <= MouseX[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MouseX[1] <= MouseX[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MouseX[2] <= MouseX[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MouseX[3] <= MouseX[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MouseX[4] <= MouseX[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MouseX[5] <= MouseX[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MouseX[6] <= MouseX[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MouseX[7] <= MouseX[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MouseY[0] <= MouseY[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MouseY[1] <= MouseY[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MouseY[2] <= MouseY[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MouseY[3] <= MouseY[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MouseY[4] <= MouseY[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MouseY[5] <= MouseY[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MouseY[6] <= MouseY[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MouseY[7] <= MouseY[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MouseZ[0] <= MouseZ[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MouseZ[1] <= MouseZ[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MouseZ[2] <= MouseZ[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MouseZ[3] <= MouseZ[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MouseZ[4] <= MouseZ[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MouseZ[5] <= MouseZ[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MouseZ[6] <= MouseZ[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
MouseZ[7] <= MouseZ[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|fill|updatePixel:inst|mouseMove:inst|MouseTransceiver:inst|MouseTransmitter:T
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_MouseClkOutWE.OUTPUTSELECT
RESET => Curr_MouseDataOut.OUTPUTSELECT
RESET => Curr_MouseDataOutWE.OUTPUTSELECT
RESET => Curr_SendCounter.OUTPUTSELECT
RESET => Curr_SendCounter.OUTPUTSELECT
RESET => Curr_SendCounter.OUTPUTSELECT
RESET => Curr_SendCounter.OUTPUTSELECT
RESET => Curr_SendCounter.OUTPUTSELECT
RESET => Curr_SendCounter.OUTPUTSELECT
RESET => Curr_SendCounter.OUTPUTSELECT
RESET => Curr_SendCounter.OUTPUTSELECT
RESET => Curr_SendCounter.OUTPUTSELECT
RESET => Curr_SendCounter.OUTPUTSELECT
RESET => Curr_SendCounter.OUTPUTSELECT
RESET => Curr_SendCounter.OUTPUTSELECT
RESET => Curr_SendCounter.OUTPUTSELECT
RESET => Curr_SendCounter.OUTPUTSELECT
RESET => Curr_SendCounter.OUTPUTSELECT
RESET => Curr_SendCounter.OUTPUTSELECT
RESET => Curr_ByteSent.OUTPUTSELECT
RESET => Curr_ByteToSend.OUTPUTSELECT
RESET => Curr_ByteToSend.OUTPUTSELECT
RESET => Curr_ByteToSend.OUTPUTSELECT
RESET => Curr_ByteToSend.OUTPUTSELECT
RESET => Curr_ByteToSend.OUTPUTSELECT
RESET => Curr_ByteToSend.OUTPUTSELECT
RESET => Curr_ByteToSend.OUTPUTSELECT
RESET => Curr_ByteToSend.OUTPUTSELECT
CLK => Curr_ByteToSend[0].CLK
CLK => Curr_ByteToSend[1].CLK
CLK => Curr_ByteToSend[2].CLK
CLK => Curr_ByteToSend[3].CLK
CLK => Curr_ByteToSend[4].CLK
CLK => Curr_ByteToSend[5].CLK
CLK => Curr_ByteToSend[6].CLK
CLK => Curr_ByteToSend[7].CLK
CLK => Curr_ByteSent.CLK
CLK => Curr_SendCounter[0].CLK
CLK => Curr_SendCounter[1].CLK
CLK => Curr_SendCounter[2].CLK
CLK => Curr_SendCounter[3].CLK
CLK => Curr_SendCounter[4].CLK
CLK => Curr_SendCounter[5].CLK
CLK => Curr_SendCounter[6].CLK
CLK => Curr_SendCounter[7].CLK
CLK => Curr_SendCounter[8].CLK
CLK => Curr_SendCounter[9].CLK
CLK => Curr_SendCounter[10].CLK
CLK => Curr_SendCounter[11].CLK
CLK => Curr_SendCounter[12].CLK
CLK => Curr_SendCounter[13].CLK
CLK => Curr_SendCounter[14].CLK
CLK => Curr_SendCounter[15].CLK
CLK => Curr_MouseDataOutWE.CLK
CLK => Curr_MouseDataOut.CLK
CLK => Curr_MouseClkOutWE.CLK
CLK => ClkMouseInDly.CLK
CLK => Curr_State~1.DATAIN
CLK_MOUSE_IN => always2.IN0
CLK_MOUSE_IN => ClkMouseInDly.DATAIN
CLK_MOUSE_IN => Next_State.OUTPUTSELECT
CLK_MOUSE_IN => Next_State.OUTPUTSELECT
CLK_MOUSE_IN => Next_State.OUTPUTSELECT
CLK_MOUSE_IN => Next_State.OUTPUTSELECT
CLK_MOUSE_IN => Next_State.OUTPUTSELECT
CLK_MOUSE_IN => Next_State.OUTPUTSELECT
CLK_MOUSE_IN => Next_State.OUTPUTSELECT
CLK_MOUSE_IN => Next_State.OUTPUTSELECT
CLK_MOUSE_IN => Next_State.OUTPUTSELECT
CLK_MOUSE_IN => Next_State.OUTPUTSELECT
CLK_MOUSE_IN => Next_State.OUTPUTSELECT
CLK_MOUSE_IN => always2.IN1
CLK_MOUSE_OUT_EN <= Curr_MouseClkOutWE.DB_MAX_OUTPUT_PORT_TYPE
DATA_MOUSE_IN => always2.IN1
DATA_MOUSE_IN => Next_State.OUTPUTSELECT
DATA_MOUSE_IN => Next_State.OUTPUTSELECT
DATA_MOUSE_IN => Next_State.OUTPUTSELECT
DATA_MOUSE_IN => Next_State.OUTPUTSELECT
DATA_MOUSE_IN => Next_State.OUTPUTSELECT
DATA_MOUSE_IN => Next_State.OUTPUTSELECT
DATA_MOUSE_IN => Next_State.OUTPUTSELECT
DATA_MOUSE_IN => Next_State.OUTPUTSELECT
DATA_MOUSE_IN => Next_State.OUTPUTSELECT
DATA_MOUSE_IN => Next_State.OUTPUTSELECT
DATA_MOUSE_IN => Next_State.OUTPUTSELECT
DATA_MOUSE_OUT <= Curr_MouseDataOut.DB_MAX_OUTPUT_PORT_TYPE
DATA_MOUSE_OUT_EN <= Curr_MouseDataOutWE.DB_MAX_OUTPUT_PORT_TYPE
SEND_BYTE => Next_State.OUTPUTSELECT
SEND_BYTE => Next_State.OUTPUTSELECT
SEND_BYTE => Next_State.OUTPUTSELECT
SEND_BYTE => Next_State.OUTPUTSELECT
SEND_BYTE => Next_State.OUTPUTSELECT
SEND_BYTE => Next_State.OUTPUTSELECT
SEND_BYTE => Next_State.OUTPUTSELECT
SEND_BYTE => Next_State.OUTPUTSELECT
SEND_BYTE => Next_State.OUTPUTSELECT
SEND_BYTE => Next_State.OUTPUTSELECT
SEND_BYTE => Next_State.OUTPUTSELECT
SEND_BYTE => Next_ByteToSend.OUTPUTSELECT
SEND_BYTE => Next_ByteToSend.OUTPUTSELECT
SEND_BYTE => Next_ByteToSend.OUTPUTSELECT
SEND_BYTE => Next_ByteToSend.OUTPUTSELECT
SEND_BYTE => Next_ByteToSend.OUTPUTSELECT
SEND_BYTE => Next_ByteToSend.OUTPUTSELECT
SEND_BYTE => Next_ByteToSend.OUTPUTSELECT
SEND_BYTE => Next_ByteToSend.OUTPUTSELECT
BYTE_TO_SEND[0] => Next_ByteToSend.DATAB
BYTE_TO_SEND[1] => Next_ByteToSend.DATAB
BYTE_TO_SEND[2] => Next_ByteToSend.DATAB
BYTE_TO_SEND[3] => Next_ByteToSend.DATAB
BYTE_TO_SEND[4] => Next_ByteToSend.DATAB
BYTE_TO_SEND[5] => Next_ByteToSend.DATAB
BYTE_TO_SEND[6] => Next_ByteToSend.DATAB
BYTE_TO_SEND[7] => Next_ByteToSend.DATAB
BYTE_SENT <= Curr_ByteSent.DB_MAX_OUTPUT_PORT_TYPE


|fill|updatePixel:inst|mouseMove:inst|MouseTransceiver:inst|MouseReceiver:R
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_MSCodeShiftReg.OUTPUTSELECT
RESET => Curr_MSCodeShiftReg.OUTPUTSELECT
RESET => Curr_MSCodeShiftReg.OUTPUTSELECT
RESET => Curr_MSCodeShiftReg.OUTPUTSELECT
RESET => Curr_MSCodeShiftReg.OUTPUTSELECT
RESET => Curr_MSCodeShiftReg.OUTPUTSELECT
RESET => Curr_MSCodeShiftReg.OUTPUTSELECT
RESET => Curr_MSCodeShiftReg.OUTPUTSELECT
RESET => Curr_BitCounter.OUTPUTSELECT
RESET => Curr_BitCounter.OUTPUTSELECT
RESET => Curr_BitCounter.OUTPUTSELECT
RESET => Curr_BitCounter.OUTPUTSELECT
RESET => Curr_ByteReceived.OUTPUTSELECT
RESET => Curr_MSCodeStatus.OUTPUTSELECT
RESET => Curr_MSCodeStatus.OUTPUTSELECT
RESET => Curr_TimeoutCounter.OUTPUTSELECT
RESET => Curr_TimeoutCounter.OUTPUTSELECT
RESET => Curr_TimeoutCounter.OUTPUTSELECT
RESET => Curr_TimeoutCounter.OUTPUTSELECT
RESET => Curr_TimeoutCounter.OUTPUTSELECT
RESET => Curr_TimeoutCounter.OUTPUTSELECT
RESET => Curr_TimeoutCounter.OUTPUTSELECT
RESET => Curr_TimeoutCounter.OUTPUTSELECT
RESET => Curr_TimeoutCounter.OUTPUTSELECT
RESET => Curr_TimeoutCounter.OUTPUTSELECT
RESET => Curr_TimeoutCounter.OUTPUTSELECT
RESET => Curr_TimeoutCounter.OUTPUTSELECT
RESET => Curr_TimeoutCounter.OUTPUTSELECT
RESET => Curr_TimeoutCounter.OUTPUTSELECT
RESET => Curr_TimeoutCounter.OUTPUTSELECT
RESET => Curr_TimeoutCounter.OUTPUTSELECT
CLK => Curr_TimeoutCounter[0].CLK
CLK => Curr_TimeoutCounter[1].CLK
CLK => Curr_TimeoutCounter[2].CLK
CLK => Curr_TimeoutCounter[3].CLK
CLK => Curr_TimeoutCounter[4].CLK
CLK => Curr_TimeoutCounter[5].CLK
CLK => Curr_TimeoutCounter[6].CLK
CLK => Curr_TimeoutCounter[7].CLK
CLK => Curr_TimeoutCounter[8].CLK
CLK => Curr_TimeoutCounter[9].CLK
CLK => Curr_TimeoutCounter[10].CLK
CLK => Curr_TimeoutCounter[11].CLK
CLK => Curr_TimeoutCounter[12].CLK
CLK => Curr_TimeoutCounter[13].CLK
CLK => Curr_TimeoutCounter[14].CLK
CLK => Curr_TimeoutCounter[15].CLK
CLK => Curr_MSCodeStatus[0].CLK
CLK => Curr_MSCodeStatus[1].CLK
CLK => Curr_ByteReceived.CLK
CLK => Curr_BitCounter[0].CLK
CLK => Curr_BitCounter[1].CLK
CLK => Curr_BitCounter[2].CLK
CLK => Curr_BitCounter[3].CLK
CLK => Curr_MSCodeShiftReg[0].CLK
CLK => Curr_MSCodeShiftReg[1].CLK
CLK => Curr_MSCodeShiftReg[2].CLK
CLK => Curr_MSCodeShiftReg[3].CLK
CLK => Curr_MSCodeShiftReg[4].CLK
CLK => Curr_MSCodeShiftReg[5].CLK
CLK => Curr_MSCodeShiftReg[6].CLK
CLK => Curr_MSCodeShiftReg[7].CLK
CLK => ClkMouseInDly.CLK
CLK => Curr_State~1.DATAIN
CLK_MOUSE_IN => ClkMouseInDly.DATAIN
CLK_MOUSE_IN => always2.IN1
CLK_MOUSE_IN => always2.IN1
DATA_MOUSE_IN => Next_MSCodeShiftReg.DATAB
DATA_MOUSE_IN => always2.IN1
DATA_MOUSE_IN => always2.IN1
DATA_MOUSE_IN => Next_MSCodeStatus.DATAB
READ_ENABLE => always2.IN1
BYTE_READ[0] <= Curr_MSCodeShiftReg[0].DB_MAX_OUTPUT_PORT_TYPE
BYTE_READ[1] <= Curr_MSCodeShiftReg[1].DB_MAX_OUTPUT_PORT_TYPE
BYTE_READ[2] <= Curr_MSCodeShiftReg[2].DB_MAX_OUTPUT_PORT_TYPE
BYTE_READ[3] <= Curr_MSCodeShiftReg[3].DB_MAX_OUTPUT_PORT_TYPE
BYTE_READ[4] <= Curr_MSCodeShiftReg[4].DB_MAX_OUTPUT_PORT_TYPE
BYTE_READ[5] <= Curr_MSCodeShiftReg[5].DB_MAX_OUTPUT_PORT_TYPE
BYTE_READ[6] <= Curr_MSCodeShiftReg[6].DB_MAX_OUTPUT_PORT_TYPE
BYTE_READ[7] <= Curr_MSCodeShiftReg[7].DB_MAX_OUTPUT_PORT_TYPE
BYTE_ERROR_CODE[0] <= Curr_MSCodeStatus[0].DB_MAX_OUTPUT_PORT_TYPE
BYTE_ERROR_CODE[1] <= Curr_MSCodeStatus[1].DB_MAX_OUTPUT_PORT_TYPE
BYTE_READY <= Curr_ByteReceived.DB_MAX_OUTPUT_PORT_TYPE


|fill|updatePixel:inst|mouseMove:inst|MouseTransceiver:inst|MouseMasterSM:MSM
CLK => Curr_Intellimouse_Mode.CLK
CLK => Curr_SendInterrupt.CLK
CLK => Curr_Dz[0].CLK
CLK => Curr_Dz[1].CLK
CLK => Curr_Dz[2].CLK
CLK => Curr_Dz[3].CLK
CLK => Curr_Dz[4].CLK
CLK => Curr_Dz[5].CLK
CLK => Curr_Dz[6].CLK
CLK => Curr_Dz[7].CLK
CLK => Curr_Dy[0].CLK
CLK => Curr_Dy[1].CLK
CLK => Curr_Dy[2].CLK
CLK => Curr_Dy[3].CLK
CLK => Curr_Dy[4].CLK
CLK => Curr_Dy[5].CLK
CLK => Curr_Dy[6].CLK
CLK => Curr_Dy[7].CLK
CLK => Curr_Dx[0].CLK
CLK => Curr_Dx[1].CLK
CLK => Curr_Dx[2].CLK
CLK => Curr_Dx[3].CLK
CLK => Curr_Dx[4].CLK
CLK => Curr_Dx[5].CLK
CLK => Curr_Dx[6].CLK
CLK => Curr_Dx[7].CLK
CLK => Curr_Status[0].CLK
CLK => Curr_Status[1].CLK
CLK => Curr_Status[2].CLK
CLK => Curr_Status[3].CLK
CLK => Curr_Status[4].CLK
CLK => Curr_Status[5].CLK
CLK => Curr_Status[6].CLK
CLK => Curr_Status[7].CLK
CLK => Curr_ReadEnable.CLK
CLK => Curr_ByteToSend[0].CLK
CLK => Curr_ByteToSend[1].CLK
CLK => Curr_ByteToSend[2].CLK
CLK => Curr_ByteToSend[3].CLK
CLK => Curr_ByteToSend[4].CLK
CLK => Curr_ByteToSend[5].CLK
CLK => Curr_ByteToSend[6].CLK
CLK => Curr_ByteToSend[7].CLK
CLK => Curr_SendByte.CLK
CLK => Curr_Counter[0].CLK
CLK => Curr_Counter[1].CLK
CLK => Curr_Counter[2].CLK
CLK => Curr_Counter[3].CLK
CLK => Curr_Counter[4].CLK
CLK => Curr_Counter[5].CLK
CLK => Curr_Counter[6].CLK
CLK => Curr_Counter[7].CLK
CLK => Curr_Counter[8].CLK
CLK => Curr_Counter[9].CLK
CLK => Curr_Counter[10].CLK
CLK => Curr_Counter[11].CLK
CLK => Curr_Counter[12].CLK
CLK => Curr_Counter[13].CLK
CLK => Curr_Counter[14].CLK
CLK => Curr_Counter[15].CLK
CLK => Curr_Counter[16].CLK
CLK => Curr_Counter[17].CLK
CLK => Curr_Counter[18].CLK
CLK => Curr_Counter[19].CLK
CLK => Curr_Counter[20].CLK
CLK => Curr_Counter[21].CLK
CLK => Curr_Counter[22].CLK
CLK => Curr_Counter[23].CLK
CLK => Curr_State~1.DATAIN
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_State.OUTPUTSELECT
RESET => Curr_Counter.OUTPUTSELECT
RESET => Curr_Counter.OUTPUTSELECT
RESET => Curr_Counter.OUTPUTSELECT
RESET => Curr_Counter.OUTPUTSELECT
RESET => Curr_Counter.OUTPUTSELECT
RESET => Curr_Counter.OUTPUTSELECT
RESET => Curr_Counter.OUTPUTSELECT
RESET => Curr_Counter.OUTPUTSELECT
RESET => Curr_Counter.OUTPUTSELECT
RESET => Curr_Counter.OUTPUTSELECT
RESET => Curr_Counter.OUTPUTSELECT
RESET => Curr_Counter.OUTPUTSELECT
RESET => Curr_Counter.OUTPUTSELECT
RESET => Curr_Counter.OUTPUTSELECT
RESET => Curr_Counter.OUTPUTSELECT
RESET => Curr_Counter.OUTPUTSELECT
RESET => Curr_Counter.OUTPUTSELECT
RESET => Curr_Counter.OUTPUTSELECT
RESET => Curr_Counter.OUTPUTSELECT
RESET => Curr_Counter.OUTPUTSELECT
RESET => Curr_Counter.OUTPUTSELECT
RESET => Curr_Counter.OUTPUTSELECT
RESET => Curr_Counter.OUTPUTSELECT
RESET => Curr_Counter.OUTPUTSELECT
RESET => Curr_SendByte.OUTPUTSELECT
RESET => Curr_ByteToSend.OUTPUTSELECT
RESET => Curr_ByteToSend.OUTPUTSELECT
RESET => Curr_ByteToSend.OUTPUTSELECT
RESET => Curr_ByteToSend.OUTPUTSELECT
RESET => Curr_ByteToSend.OUTPUTSELECT
RESET => Curr_ByteToSend.OUTPUTSELECT
RESET => Curr_ByteToSend.OUTPUTSELECT
RESET => Curr_ByteToSend.OUTPUTSELECT
RESET => Curr_ReadEnable.OUTPUTSELECT
RESET => Curr_Status.OUTPUTSELECT
RESET => Curr_Status.OUTPUTSELECT
RESET => Curr_Status.OUTPUTSELECT
RESET => Curr_Status.OUTPUTSELECT
RESET => Curr_Status.OUTPUTSELECT
RESET => Curr_Status.OUTPUTSELECT
RESET => Curr_Status.OUTPUTSELECT
RESET => Curr_Status.OUTPUTSELECT
RESET => Curr_Dx.OUTPUTSELECT
RESET => Curr_Dx.OUTPUTSELECT
RESET => Curr_Dx.OUTPUTSELECT
RESET => Curr_Dx.OUTPUTSELECT
RESET => Curr_Dx.OUTPUTSELECT
RESET => Curr_Dx.OUTPUTSELECT
RESET => Curr_Dx.OUTPUTSELECT
RESET => Curr_Dx.OUTPUTSELECT
RESET => Curr_Dy.OUTPUTSELECT
RESET => Curr_Dy.OUTPUTSELECT
RESET => Curr_Dy.OUTPUTSELECT
RESET => Curr_Dy.OUTPUTSELECT
RESET => Curr_Dy.OUTPUTSELECT
RESET => Curr_Dy.OUTPUTSELECT
RESET => Curr_Dy.OUTPUTSELECT
RESET => Curr_Dy.OUTPUTSELECT
RESET => Curr_Dz.OUTPUTSELECT
RESET => Curr_Dz.OUTPUTSELECT
RESET => Curr_Dz.OUTPUTSELECT
RESET => Curr_Dz.OUTPUTSELECT
RESET => Curr_Dz.OUTPUTSELECT
RESET => Curr_Dz.OUTPUTSELECT
RESET => Curr_Dz.OUTPUTSELECT
RESET => Curr_Dz.OUTPUTSELECT
RESET => Curr_SendInterrupt.OUTPUTSELECT
RESET => Curr_Intellimouse_Mode.OUTPUTSELECT
SEND_BYTE <= Curr_SendByte.DB_MAX_OUTPUT_PORT_TYPE
BYTE_TO_SEND[0] <= Curr_ByteToSend[0].DB_MAX_OUTPUT_PORT_TYPE
BYTE_TO_SEND[1] <= Curr_ByteToSend[1].DB_MAX_OUTPUT_PORT_TYPE
BYTE_TO_SEND[2] <= Curr_ByteToSend[2].DB_MAX_OUTPUT_PORT_TYPE
BYTE_TO_SEND[3] <= Curr_ByteToSend[3].DB_MAX_OUTPUT_PORT_TYPE
BYTE_TO_SEND[4] <= Curr_ByteToSend[4].DB_MAX_OUTPUT_PORT_TYPE
BYTE_TO_SEND[5] <= Curr_ByteToSend[5].DB_MAX_OUTPUT_PORT_TYPE
BYTE_TO_SEND[6] <= Curr_ByteToSend[6].DB_MAX_OUTPUT_PORT_TYPE
BYTE_TO_SEND[7] <= Curr_ByteToSend[7].DB_MAX_OUTPUT_PORT_TYPE
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
BYTE_SENT => Next_State.OUTPUTSELECT
READ_ENABLE <= Curr_ReadEnable.DB_MAX_OUTPUT_PORT_TYPE
BYTE_READ[0] => Next_Status.DATAB
BYTE_READ[0] => Next_Dx.DATAB
BYTE_READ[0] => Next_Dy.DATAB
BYTE_READ[0] => Next_Dz.DATAB
BYTE_READ[0] => Equal1.IN7
BYTE_READ[0] => Equal2.IN7
BYTE_READ[0] => Equal3.IN7
BYTE_READ[0] => Equal4.IN1
BYTE_READ[1] => Next_Status.DATAB
BYTE_READ[1] => Next_Dx.DATAB
BYTE_READ[1] => Next_Dy.DATAB
BYTE_READ[1] => Next_Dz.DATAB
BYTE_READ[1] => Equal1.IN5
BYTE_READ[1] => Equal2.IN3
BYTE_READ[1] => Equal3.IN6
BYTE_READ[1] => Equal4.IN0
BYTE_READ[2] => Next_Status.DATAB
BYTE_READ[2] => Next_Dx.DATAB
BYTE_READ[2] => Next_Dy.DATAB
BYTE_READ[2] => Next_Dz.DATAB
BYTE_READ[2] => Equal1.IN6
BYTE_READ[2] => Equal2.IN6
BYTE_READ[2] => Equal3.IN5
BYTE_READ[2] => Equal4.IN7
BYTE_READ[3] => Next_Status.DATAB
BYTE_READ[3] => Next_Dx.DATAB
BYTE_READ[3] => Next_Dy.DATAB
BYTE_READ[3] => Next_Dz.DATAB
BYTE_READ[3] => Equal1.IN4
BYTE_READ[3] => Equal2.IN2
BYTE_READ[3] => Equal3.IN4
BYTE_READ[3] => Equal4.IN6
BYTE_READ[4] => Next_Status.DATAB
BYTE_READ[4] => Next_Dx.DATAB
BYTE_READ[4] => Next_Dy.DATAB
BYTE_READ[4] => Next_Dz.DATAB
BYTE_READ[4] => Equal1.IN3
BYTE_READ[4] => Equal2.IN5
BYTE_READ[4] => Equal3.IN3
BYTE_READ[4] => Equal4.IN5
BYTE_READ[5] => Next_Status.DATAB
BYTE_READ[5] => Next_Dx.DATAB
BYTE_READ[5] => Next_Dy.DATAB
BYTE_READ[5] => Next_Dz.DATAB
BYTE_READ[5] => Equal1.IN2
BYTE_READ[5] => Equal2.IN1
BYTE_READ[5] => Equal3.IN2
BYTE_READ[5] => Equal4.IN4
BYTE_READ[6] => Next_Status.DATAB
BYTE_READ[6] => Next_Dx.DATAB
BYTE_READ[6] => Next_Dy.DATAB
BYTE_READ[6] => Next_Dz.DATAB
BYTE_READ[6] => Equal1.IN1
BYTE_READ[6] => Equal2.IN4
BYTE_READ[6] => Equal3.IN1
BYTE_READ[6] => Equal4.IN3
BYTE_READ[7] => Next_Status.DATAB
BYTE_READ[7] => Next_Dx.DATAB
BYTE_READ[7] => Next_Dy.DATAB
BYTE_READ[7] => Next_Dz.DATAB
BYTE_READ[7] => Equal1.IN0
BYTE_READ[7] => Equal2.IN0
BYTE_READ[7] => Equal3.IN0
BYTE_READ[7] => Equal4.IN2
BYTE_ERROR_CODE[0] => Equal5.IN1
BYTE_ERROR_CODE[1] => Equal5.IN0
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_Intellimouse_Mode.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_Status.OUTPUTSELECT
BYTE_READY => Next_Status.OUTPUTSELECT
BYTE_READY => Next_Status.OUTPUTSELECT
BYTE_READY => Next_Status.OUTPUTSELECT
BYTE_READY => Next_Status.OUTPUTSELECT
BYTE_READY => Next_Status.OUTPUTSELECT
BYTE_READY => Next_Status.OUTPUTSELECT
BYTE_READY => Next_Status.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_Dx.OUTPUTSELECT
BYTE_READY => Next_Dx.OUTPUTSELECT
BYTE_READY => Next_Dx.OUTPUTSELECT
BYTE_READY => Next_Dx.OUTPUTSELECT
BYTE_READY => Next_Dx.OUTPUTSELECT
BYTE_READY => Next_Dx.OUTPUTSELECT
BYTE_READY => Next_Dx.OUTPUTSELECT
BYTE_READY => Next_Dx.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
BYTE_READY => Next_Dy.OUTPUTSELECT
BYTE_READY => Next_Dy.OUTPUTSELECT
BYTE_READY => Next_Dy.OUTPUTSELECT
BYTE_READY => Next_Dy.OUTPUTSELECT
BYTE_READY => Next_Dy.OUTPUTSELECT
BYTE_READY => Next_Dy.OUTPUTSELECT
BYTE_READY => Next_Dy.OUTPUTSELECT
BYTE_READY => Next_Dy.OUTPUTSELECT
BYTE_READY => Next_Dz.OUTPUTSELECT
BYTE_READY => Next_Dz.OUTPUTSELECT
BYTE_READY => Next_Dz.OUTPUTSELECT
BYTE_READY => Next_Dz.OUTPUTSELECT
BYTE_READY => Next_Dz.OUTPUTSELECT
BYTE_READY => Next_Dz.OUTPUTSELECT
BYTE_READY => Next_Dz.OUTPUTSELECT
BYTE_READY => Next_Dz.OUTPUTSELECT
BYTE_READY => Next_State.OUTPUTSELECT
MOUSE_DX[0] <= Curr_Dx[0].DB_MAX_OUTPUT_PORT_TYPE
MOUSE_DX[1] <= Curr_Dx[1].DB_MAX_OUTPUT_PORT_TYPE
MOUSE_DX[2] <= Curr_Dx[2].DB_MAX_OUTPUT_PORT_TYPE
MOUSE_DX[3] <= Curr_Dx[3].DB_MAX_OUTPUT_PORT_TYPE
MOUSE_DX[4] <= Curr_Dx[4].DB_MAX_OUTPUT_PORT_TYPE
MOUSE_DX[5] <= Curr_Dx[5].DB_MAX_OUTPUT_PORT_TYPE
MOUSE_DX[6] <= Curr_Dx[6].DB_MAX_OUTPUT_PORT_TYPE
MOUSE_DX[7] <= Curr_Dx[7].DB_MAX_OUTPUT_PORT_TYPE
MOUSE_DY[0] <= Curr_Dy[0].DB_MAX_OUTPUT_PORT_TYPE
MOUSE_DY[1] <= Curr_Dy[1].DB_MAX_OUTPUT_PORT_TYPE
MOUSE_DY[2] <= Curr_Dy[2].DB_MAX_OUTPUT_PORT_TYPE
MOUSE_DY[3] <= Curr_Dy[3].DB_MAX_OUTPUT_PORT_TYPE
MOUSE_DY[4] <= Curr_Dy[4].DB_MAX_OUTPUT_PORT_TYPE
MOUSE_DY[5] <= Curr_Dy[5].DB_MAX_OUTPUT_PORT_TYPE
MOUSE_DY[6] <= Curr_Dy[6].DB_MAX_OUTPUT_PORT_TYPE
MOUSE_DY[7] <= Curr_Dy[7].DB_MAX_OUTPUT_PORT_TYPE
MOUSE_DZ[0] <= Curr_Dz[0].DB_MAX_OUTPUT_PORT_TYPE
MOUSE_DZ[1] <= Curr_Dz[1].DB_MAX_OUTPUT_PORT_TYPE
MOUSE_DZ[2] <= Curr_Dz[2].DB_MAX_OUTPUT_PORT_TYPE
MOUSE_DZ[3] <= Curr_Dz[3].DB_MAX_OUTPUT_PORT_TYPE
MOUSE_DZ[4] <= Curr_Dz[4].DB_MAX_OUTPUT_PORT_TYPE
MOUSE_DZ[5] <= Curr_Dz[5].DB_MAX_OUTPUT_PORT_TYPE
MOUSE_DZ[6] <= Curr_Dz[6].DB_MAX_OUTPUT_PORT_TYPE
MOUSE_DZ[7] <= Curr_Dz[7].DB_MAX_OUTPUT_PORT_TYPE
MOUSE_STATUS[0] <= Curr_Status[0].DB_MAX_OUTPUT_PORT_TYPE
MOUSE_STATUS[1] <= Curr_Status[1].DB_MAX_OUTPUT_PORT_TYPE
MOUSE_STATUS[2] <= Curr_Status[2].DB_MAX_OUTPUT_PORT_TYPE
MOUSE_STATUS[3] <= Curr_Status[3].DB_MAX_OUTPUT_PORT_TYPE
MOUSE_STATUS[4] <= Curr_Status[4].DB_MAX_OUTPUT_PORT_TYPE
MOUSE_STATUS[5] <= Curr_Status[5].DB_MAX_OUTPUT_PORT_TYPE
MOUSE_STATUS[6] <= Curr_Status[6].DB_MAX_OUTPUT_PORT_TYPE
MOUSE_STATUS[7] <= Curr_Status[7].DB_MAX_OUTPUT_PORT_TYPE
SEND_INTERRUPT <= Curr_SendInterrupt.DB_MAX_OUTPUT_PORT_TYPE


|fill|updatePixel:inst|PixelMemory:pixmem_inst
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
address[8] => address[8].IN1
address[9] => address[9].IN1
address[10] => address[10].IN1
address[11] => address[11].IN1
address[12] => address[12].IN1
address[13] => address[13].IN1
address[14] => address[14].IN1
clock => clock.IN1
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
wren => wren.IN1
q[0] <= altsyncram:altsyncram_component.q_a
q[1] <= altsyncram:altsyncram_component.q_a
q[2] <= altsyncram:altsyncram_component.q_a


|fill|updatePixel:inst|PixelMemory:pixmem_inst|altsyncram:altsyncram_component
wren_a => altsyncram_dgm1:auto_generated.wren_a
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => altsyncram_dgm1:auto_generated.data_a[0]
data_a[1] => altsyncram_dgm1:auto_generated.data_a[1]
data_a[2] => altsyncram_dgm1:auto_generated.data_a[2]
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_dgm1:auto_generated.address_a[0]
address_a[1] => altsyncram_dgm1:auto_generated.address_a[1]
address_a[2] => altsyncram_dgm1:auto_generated.address_a[2]
address_a[3] => altsyncram_dgm1:auto_generated.address_a[3]
address_a[4] => altsyncram_dgm1:auto_generated.address_a[4]
address_a[5] => altsyncram_dgm1:auto_generated.address_a[5]
address_a[6] => altsyncram_dgm1:auto_generated.address_a[6]
address_a[7] => altsyncram_dgm1:auto_generated.address_a[7]
address_a[8] => altsyncram_dgm1:auto_generated.address_a[8]
address_a[9] => altsyncram_dgm1:auto_generated.address_a[9]
address_a[10] => altsyncram_dgm1:auto_generated.address_a[10]
address_a[11] => altsyncram_dgm1:auto_generated.address_a[11]
address_a[12] => altsyncram_dgm1:auto_generated.address_a[12]
address_a[13] => altsyncram_dgm1:auto_generated.address_a[13]
address_a[14] => altsyncram_dgm1:auto_generated.address_a[14]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_dgm1:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_dgm1:auto_generated.q_a[0]
q_a[1] <= altsyncram_dgm1:auto_generated.q_a[1]
q_a[2] <= altsyncram_dgm1:auto_generated.q_a[2]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|fill|updatePixel:inst|PixelMemory:pixmem_inst|altsyncram:altsyncram_component|altsyncram_dgm1:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[0] => ram_block1a8.PORTAADDR
address_a[0] => ram_block1a9.PORTAADDR
address_a[0] => ram_block1a10.PORTAADDR
address_a[0] => ram_block1a11.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[1] => ram_block1a8.PORTAADDR1
address_a[1] => ram_block1a9.PORTAADDR1
address_a[1] => ram_block1a10.PORTAADDR1
address_a[1] => ram_block1a11.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[2] => ram_block1a8.PORTAADDR2
address_a[2] => ram_block1a9.PORTAADDR2
address_a[2] => ram_block1a10.PORTAADDR2
address_a[2] => ram_block1a11.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[3] => ram_block1a8.PORTAADDR3
address_a[3] => ram_block1a9.PORTAADDR3
address_a[3] => ram_block1a10.PORTAADDR3
address_a[3] => ram_block1a11.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[4] => ram_block1a8.PORTAADDR4
address_a[4] => ram_block1a9.PORTAADDR4
address_a[4] => ram_block1a10.PORTAADDR4
address_a[4] => ram_block1a11.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[5] => ram_block1a7.PORTAADDR5
address_a[5] => ram_block1a8.PORTAADDR5
address_a[5] => ram_block1a9.PORTAADDR5
address_a[5] => ram_block1a10.PORTAADDR5
address_a[5] => ram_block1a11.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[6] => ram_block1a7.PORTAADDR6
address_a[6] => ram_block1a8.PORTAADDR6
address_a[6] => ram_block1a9.PORTAADDR6
address_a[6] => ram_block1a10.PORTAADDR6
address_a[6] => ram_block1a11.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[7] => ram_block1a7.PORTAADDR7
address_a[7] => ram_block1a8.PORTAADDR7
address_a[7] => ram_block1a9.PORTAADDR7
address_a[7] => ram_block1a10.PORTAADDR7
address_a[7] => ram_block1a11.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[8] => ram_block1a4.PORTAADDR8
address_a[8] => ram_block1a5.PORTAADDR8
address_a[8] => ram_block1a6.PORTAADDR8
address_a[8] => ram_block1a7.PORTAADDR8
address_a[8] => ram_block1a8.PORTAADDR8
address_a[8] => ram_block1a9.PORTAADDR8
address_a[8] => ram_block1a10.PORTAADDR8
address_a[8] => ram_block1a11.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[9] => ram_block1a2.PORTAADDR9
address_a[9] => ram_block1a3.PORTAADDR9
address_a[9] => ram_block1a4.PORTAADDR9
address_a[9] => ram_block1a5.PORTAADDR9
address_a[9] => ram_block1a6.PORTAADDR9
address_a[9] => ram_block1a7.PORTAADDR9
address_a[9] => ram_block1a8.PORTAADDR9
address_a[9] => ram_block1a9.PORTAADDR9
address_a[9] => ram_block1a10.PORTAADDR9
address_a[9] => ram_block1a11.PORTAADDR9
address_a[10] => ram_block1a0.PORTAADDR10
address_a[10] => ram_block1a1.PORTAADDR10
address_a[10] => ram_block1a2.PORTAADDR10
address_a[10] => ram_block1a3.PORTAADDR10
address_a[10] => ram_block1a4.PORTAADDR10
address_a[10] => ram_block1a5.PORTAADDR10
address_a[10] => ram_block1a6.PORTAADDR10
address_a[10] => ram_block1a7.PORTAADDR10
address_a[10] => ram_block1a8.PORTAADDR10
address_a[10] => ram_block1a9.PORTAADDR10
address_a[10] => ram_block1a10.PORTAADDR10
address_a[10] => ram_block1a11.PORTAADDR10
address_a[11] => ram_block1a0.PORTAADDR11
address_a[11] => ram_block1a1.PORTAADDR11
address_a[11] => ram_block1a2.PORTAADDR11
address_a[11] => ram_block1a3.PORTAADDR11
address_a[11] => ram_block1a4.PORTAADDR11
address_a[11] => ram_block1a5.PORTAADDR11
address_a[11] => ram_block1a6.PORTAADDR11
address_a[11] => ram_block1a7.PORTAADDR11
address_a[11] => ram_block1a8.PORTAADDR11
address_a[11] => ram_block1a9.PORTAADDR11
address_a[11] => ram_block1a10.PORTAADDR11
address_a[11] => ram_block1a11.PORTAADDR11
address_a[12] => ram_block1a0.PORTAADDR12
address_a[12] => ram_block1a1.PORTAADDR12
address_a[12] => ram_block1a2.PORTAADDR12
address_a[12] => ram_block1a3.PORTAADDR12
address_a[12] => ram_block1a4.PORTAADDR12
address_a[12] => ram_block1a5.PORTAADDR12
address_a[12] => ram_block1a6.PORTAADDR12
address_a[12] => ram_block1a7.PORTAADDR12
address_a[12] => ram_block1a8.PORTAADDR12
address_a[12] => ram_block1a9.PORTAADDR12
address_a[12] => ram_block1a10.PORTAADDR12
address_a[12] => ram_block1a11.PORTAADDR12
address_a[13] => address_reg_a[0].DATAIN
address_a[13] => decode_8la:decode3.data[0]
address_a[13] => decode_11a:rden_decode.data[0]
address_a[14] => address_reg_a[1].DATAIN
address_a[14] => decode_8la:decode3.data[1]
address_a[14] => decode_11a:rden_decode.data[1]
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
clock0 => ram_block1a8.CLK0
clock0 => ram_block1a9.CLK0
clock0 => ram_block1a10.CLK0
clock0 => ram_block1a11.CLK0
clock0 => address_reg_a[1].CLK
clock0 => address_reg_a[0].CLK
data_a[0] => ram_block1a0.PORTADATAIN
data_a[0] => ram_block1a3.PORTADATAIN
data_a[0] => ram_block1a6.PORTADATAIN
data_a[0] => ram_block1a9.PORTADATAIN
data_a[1] => ram_block1a1.PORTADATAIN
data_a[1] => ram_block1a4.PORTADATAIN
data_a[1] => ram_block1a7.PORTADATAIN
data_a[1] => ram_block1a10.PORTADATAIN
data_a[2] => ram_block1a2.PORTADATAIN
data_a[2] => ram_block1a5.PORTADATAIN
data_a[2] => ram_block1a8.PORTADATAIN
data_a[2] => ram_block1a11.PORTADATAIN
q_a[0] <= mux_jfb:mux2.result[0]
q_a[1] <= mux_jfb:mux2.result[1]
q_a[2] <= mux_jfb:mux2.result[2]
wren_a => decode_8la:decode3.enable


|fill|updatePixel:inst|PixelMemory:pixmem_inst|altsyncram:altsyncram_component|altsyncram_dgm1:auto_generated|decode_8la:decode3
data[0] => w_anode111w[1].IN1
data[0] => w_anode119w[1].IN0
data[0] => w_anode127w[1].IN1
data[0] => w_anode98w[1].IN0
data[1] => w_anode111w[2].IN0
data[1] => w_anode119w[2].IN1
data[1] => w_anode127w[2].IN1
data[1] => w_anode98w[2].IN0
enable => w_anode111w[1].IN0
enable => w_anode119w[1].IN0
enable => w_anode127w[1].IN0
enable => w_anode98w[1].IN0
eq[0] <= w_anode98w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= w_anode111w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= w_anode119w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[3] <= w_anode127w[2].DB_MAX_OUTPUT_PORT_TYPE


|fill|updatePixel:inst|PixelMemory:pixmem_inst|altsyncram:altsyncram_component|altsyncram_dgm1:auto_generated|decode_11a:rden_decode
data[0] => w_anode136w[1].IN0
data[0] => w_anode150w[1].IN1
data[0] => w_anode159w[1].IN0
data[0] => w_anode168w[1].IN1
data[1] => w_anode136w[2].IN0
data[1] => w_anode150w[2].IN0
data[1] => w_anode159w[2].IN1
data[1] => w_anode168w[2].IN1
eq[0] <= w_anode136w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= w_anode150w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= w_anode159w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[3] <= w_anode168w[2].DB_MAX_OUTPUT_PORT_TYPE


|fill|updatePixel:inst|PixelMemory:pixmem_inst|altsyncram:altsyncram_component|altsyncram_dgm1:auto_generated|mux_jfb:mux2
data[0] => l1_w0_n0_mux_dataout.IN1
data[1] => l1_w1_n0_mux_dataout.IN1
data[2] => l1_w2_n0_mux_dataout.IN1
data[3] => l1_w0_n0_mux_dataout.IN1
data[4] => l1_w1_n0_mux_dataout.IN1
data[5] => l1_w2_n0_mux_dataout.IN1
data[6] => l1_w0_n1_mux_dataout.IN1
data[7] => l1_w1_n1_mux_dataout.IN1
data[8] => l1_w2_n1_mux_dataout.IN1
data[9] => l1_w0_n1_mux_dataout.IN1
data[10] => l1_w1_n1_mux_dataout.IN1
data[11] => l1_w2_n1_mux_dataout.IN1
result[0] <= l2_w0_n0_mux_dataout.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= l2_w1_n0_mux_dataout.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= l2_w2_n0_mux_dataout.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => l1_w0_n0_mux_dataout.IN0
sel[0] => _.IN0
sel[0] => l1_w0_n1_mux_dataout.IN0
sel[0] => _.IN0
sel[0] => l1_w1_n0_mux_dataout.IN0
sel[0] => _.IN0
sel[0] => l1_w1_n1_mux_dataout.IN0
sel[0] => _.IN0
sel[0] => l1_w2_n0_mux_dataout.IN0
sel[0] => _.IN0
sel[0] => l1_w2_n1_mux_dataout.IN0
sel[0] => _.IN0
sel[1] => l2_w0_n0_mux_dataout.IN0
sel[1] => _.IN0
sel[1] => l2_w1_n0_mux_dataout.IN0
sel[1] => _.IN0
sel[1] => l2_w2_n0_mux_dataout.IN0
sel[1] => _.IN0


|fill|updatePixel:inst|Hexadecimal_To_Seven_Segment:inst1
hex_number[0] => Equal0.IN3
hex_number[0] => Equal1.IN0
hex_number[0] => Equal2.IN3
hex_number[0] => Equal3.IN1
hex_number[0] => Equal4.IN3
hex_number[0] => Equal5.IN1
hex_number[0] => Equal6.IN3
hex_number[0] => Equal7.IN2
hex_number[0] => Equal8.IN1
hex_number[0] => Equal9.IN3
hex_number[0] => Equal10.IN2
hex_number[0] => Equal11.IN3
hex_number[0] => Equal12.IN2
hex_number[0] => Equal13.IN3
hex_number[0] => Equal14.IN3
hex_number[1] => Equal0.IN2
hex_number[1] => Equal1.IN3
hex_number[1] => Equal2.IN0
hex_number[1] => Equal3.IN0
hex_number[1] => Equal4.IN2
hex_number[1] => Equal5.IN3
hex_number[1] => Equal6.IN1
hex_number[1] => Equal7.IN1
hex_number[1] => Equal8.IN3
hex_number[1] => Equal9.IN1
hex_number[1] => Equal10.IN1
hex_number[1] => Equal11.IN2
hex_number[1] => Equal12.IN3
hex_number[1] => Equal13.IN2
hex_number[1] => Equal14.IN2
hex_number[2] => Equal0.IN1
hex_number[2] => Equal1.IN2
hex_number[2] => Equal2.IN2
hex_number[2] => Equal3.IN3
hex_number[2] => Equal4.IN0
hex_number[2] => Equal5.IN0
hex_number[2] => Equal6.IN0
hex_number[2] => Equal7.IN0
hex_number[2] => Equal8.IN2
hex_number[2] => Equal9.IN2
hex_number[2] => Equal10.IN3
hex_number[2] => Equal11.IN1
hex_number[2] => Equal12.IN1
hex_number[2] => Equal13.IN1
hex_number[2] => Equal14.IN1
hex_number[3] => Equal0.IN0
hex_number[3] => Equal1.IN1
hex_number[3] => Equal2.IN1
hex_number[3] => Equal3.IN2
hex_number[3] => Equal4.IN1
hex_number[3] => Equal5.IN2
hex_number[3] => Equal6.IN2
hex_number[3] => Equal7.IN3
hex_number[3] => Equal8.IN0
hex_number[3] => Equal9.IN0
hex_number[3] => Equal10.IN0
hex_number[3] => Equal11.IN0
hex_number[3] => Equal12.IN0
hex_number[3] => Equal13.IN0
hex_number[3] => Equal14.IN0
seven_seg_display[0] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[1] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[2] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[3] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[4] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[5] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[6] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE


|fill|updatePixel:inst|Hexadecimal_To_Seven_Segment:inst2
hex_number[0] => Equal0.IN3
hex_number[0] => Equal1.IN0
hex_number[0] => Equal2.IN3
hex_number[0] => Equal3.IN1
hex_number[0] => Equal4.IN3
hex_number[0] => Equal5.IN1
hex_number[0] => Equal6.IN3
hex_number[0] => Equal7.IN2
hex_number[0] => Equal8.IN1
hex_number[0] => Equal9.IN3
hex_number[0] => Equal10.IN2
hex_number[0] => Equal11.IN3
hex_number[0] => Equal12.IN2
hex_number[0] => Equal13.IN3
hex_number[0] => Equal14.IN3
hex_number[1] => Equal0.IN2
hex_number[1] => Equal1.IN3
hex_number[1] => Equal2.IN0
hex_number[1] => Equal3.IN0
hex_number[1] => Equal4.IN2
hex_number[1] => Equal5.IN3
hex_number[1] => Equal6.IN1
hex_number[1] => Equal7.IN1
hex_number[1] => Equal8.IN3
hex_number[1] => Equal9.IN1
hex_number[1] => Equal10.IN1
hex_number[1] => Equal11.IN2
hex_number[1] => Equal12.IN3
hex_number[1] => Equal13.IN2
hex_number[1] => Equal14.IN2
hex_number[2] => Equal0.IN1
hex_number[2] => Equal1.IN2
hex_number[2] => Equal2.IN2
hex_number[2] => Equal3.IN3
hex_number[2] => Equal4.IN0
hex_number[2] => Equal5.IN0
hex_number[2] => Equal6.IN0
hex_number[2] => Equal7.IN0
hex_number[2] => Equal8.IN2
hex_number[2] => Equal9.IN2
hex_number[2] => Equal10.IN3
hex_number[2] => Equal11.IN1
hex_number[2] => Equal12.IN1
hex_number[2] => Equal13.IN1
hex_number[2] => Equal14.IN1
hex_number[3] => Equal0.IN0
hex_number[3] => Equal1.IN1
hex_number[3] => Equal2.IN1
hex_number[3] => Equal3.IN2
hex_number[3] => Equal4.IN1
hex_number[3] => Equal5.IN2
hex_number[3] => Equal6.IN2
hex_number[3] => Equal7.IN3
hex_number[3] => Equal8.IN0
hex_number[3] => Equal9.IN0
hex_number[3] => Equal10.IN0
hex_number[3] => Equal11.IN0
hex_number[3] => Equal12.IN0
hex_number[3] => Equal13.IN0
hex_number[3] => Equal14.IN0
seven_seg_display[0] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[1] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[2] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[3] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[4] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[5] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[6] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE


|fill|updatePixel:inst|Hexadecimal_To_Seven_Segment:inst3
hex_number[0] => Equal0.IN3
hex_number[0] => Equal1.IN0
hex_number[0] => Equal2.IN3
hex_number[0] => Equal3.IN1
hex_number[0] => Equal4.IN3
hex_number[0] => Equal5.IN1
hex_number[0] => Equal6.IN3
hex_number[0] => Equal7.IN2
hex_number[0] => Equal8.IN1
hex_number[0] => Equal9.IN3
hex_number[0] => Equal10.IN2
hex_number[0] => Equal11.IN3
hex_number[0] => Equal12.IN2
hex_number[0] => Equal13.IN3
hex_number[0] => Equal14.IN3
hex_number[1] => Equal0.IN2
hex_number[1] => Equal1.IN3
hex_number[1] => Equal2.IN0
hex_number[1] => Equal3.IN0
hex_number[1] => Equal4.IN2
hex_number[1] => Equal5.IN3
hex_number[1] => Equal6.IN1
hex_number[1] => Equal7.IN1
hex_number[1] => Equal8.IN3
hex_number[1] => Equal9.IN1
hex_number[1] => Equal10.IN1
hex_number[1] => Equal11.IN2
hex_number[1] => Equal12.IN3
hex_number[1] => Equal13.IN2
hex_number[1] => Equal14.IN2
hex_number[2] => Equal0.IN1
hex_number[2] => Equal1.IN2
hex_number[2] => Equal2.IN2
hex_number[2] => Equal3.IN3
hex_number[2] => Equal4.IN0
hex_number[2] => Equal5.IN0
hex_number[2] => Equal6.IN0
hex_number[2] => Equal7.IN0
hex_number[2] => Equal8.IN2
hex_number[2] => Equal9.IN2
hex_number[2] => Equal10.IN3
hex_number[2] => Equal11.IN1
hex_number[2] => Equal12.IN1
hex_number[2] => Equal13.IN1
hex_number[2] => Equal14.IN1
hex_number[3] => Equal0.IN0
hex_number[3] => Equal1.IN1
hex_number[3] => Equal2.IN1
hex_number[3] => Equal3.IN2
hex_number[3] => Equal4.IN1
hex_number[3] => Equal5.IN2
hex_number[3] => Equal6.IN2
hex_number[3] => Equal7.IN3
hex_number[3] => Equal8.IN0
hex_number[3] => Equal9.IN0
hex_number[3] => Equal10.IN0
hex_number[3] => Equal11.IN0
hex_number[3] => Equal12.IN0
hex_number[3] => Equal13.IN0
hex_number[3] => Equal14.IN0
seven_seg_display[0] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[1] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[2] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[3] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[4] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[5] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[6] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE


|fill|updatePixel:inst|Hexadecimal_To_Seven_Segment:inst4
hex_number[0] => Equal0.IN3
hex_number[0] => Equal1.IN0
hex_number[0] => Equal2.IN3
hex_number[0] => Equal3.IN1
hex_number[0] => Equal4.IN3
hex_number[0] => Equal5.IN1
hex_number[0] => Equal6.IN3
hex_number[0] => Equal7.IN2
hex_number[0] => Equal8.IN1
hex_number[0] => Equal9.IN3
hex_number[0] => Equal10.IN2
hex_number[0] => Equal11.IN3
hex_number[0] => Equal12.IN2
hex_number[0] => Equal13.IN3
hex_number[0] => Equal14.IN3
hex_number[1] => Equal0.IN2
hex_number[1] => Equal1.IN3
hex_number[1] => Equal2.IN0
hex_number[1] => Equal3.IN0
hex_number[1] => Equal4.IN2
hex_number[1] => Equal5.IN3
hex_number[1] => Equal6.IN1
hex_number[1] => Equal7.IN1
hex_number[1] => Equal8.IN3
hex_number[1] => Equal9.IN1
hex_number[1] => Equal10.IN1
hex_number[1] => Equal11.IN2
hex_number[1] => Equal12.IN3
hex_number[1] => Equal13.IN2
hex_number[1] => Equal14.IN2
hex_number[2] => Equal0.IN1
hex_number[2] => Equal1.IN2
hex_number[2] => Equal2.IN2
hex_number[2] => Equal3.IN3
hex_number[2] => Equal4.IN0
hex_number[2] => Equal5.IN0
hex_number[2] => Equal6.IN0
hex_number[2] => Equal7.IN0
hex_number[2] => Equal8.IN2
hex_number[2] => Equal9.IN2
hex_number[2] => Equal10.IN3
hex_number[2] => Equal11.IN1
hex_number[2] => Equal12.IN1
hex_number[2] => Equal13.IN1
hex_number[2] => Equal14.IN1
hex_number[3] => Equal0.IN0
hex_number[3] => Equal1.IN1
hex_number[3] => Equal2.IN1
hex_number[3] => Equal3.IN2
hex_number[3] => Equal4.IN1
hex_number[3] => Equal5.IN2
hex_number[3] => Equal6.IN2
hex_number[3] => Equal7.IN3
hex_number[3] => Equal8.IN0
hex_number[3] => Equal9.IN0
hex_number[3] => Equal10.IN0
hex_number[3] => Equal11.IN0
hex_number[3] => Equal12.IN0
hex_number[3] => Equal13.IN0
hex_number[3] => Equal14.IN0
seven_seg_display[0] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[1] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[2] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[3] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[4] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[5] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[6] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE


|fill|updatePixel:inst|Hexadecimal_To_Seven_Segment:inst5
hex_number[0] => Equal0.IN3
hex_number[0] => Equal1.IN0
hex_number[0] => Equal2.IN3
hex_number[0] => Equal3.IN1
hex_number[0] => Equal4.IN3
hex_number[0] => Equal5.IN1
hex_number[0] => Equal6.IN3
hex_number[0] => Equal7.IN2
hex_number[0] => Equal8.IN1
hex_number[0] => Equal9.IN3
hex_number[0] => Equal10.IN2
hex_number[0] => Equal11.IN3
hex_number[0] => Equal12.IN2
hex_number[0] => Equal13.IN3
hex_number[0] => Equal14.IN3
hex_number[1] => Equal0.IN2
hex_number[1] => Equal1.IN3
hex_number[1] => Equal2.IN0
hex_number[1] => Equal3.IN0
hex_number[1] => Equal4.IN2
hex_number[1] => Equal5.IN3
hex_number[1] => Equal6.IN1
hex_number[1] => Equal7.IN1
hex_number[1] => Equal8.IN3
hex_number[1] => Equal9.IN1
hex_number[1] => Equal10.IN1
hex_number[1] => Equal11.IN2
hex_number[1] => Equal12.IN3
hex_number[1] => Equal13.IN2
hex_number[1] => Equal14.IN2
hex_number[2] => Equal0.IN1
hex_number[2] => Equal1.IN2
hex_number[2] => Equal2.IN2
hex_number[2] => Equal3.IN3
hex_number[2] => Equal4.IN0
hex_number[2] => Equal5.IN0
hex_number[2] => Equal6.IN0
hex_number[2] => Equal7.IN0
hex_number[2] => Equal8.IN2
hex_number[2] => Equal9.IN2
hex_number[2] => Equal10.IN3
hex_number[2] => Equal11.IN1
hex_number[2] => Equal12.IN1
hex_number[2] => Equal13.IN1
hex_number[2] => Equal14.IN1
hex_number[3] => Equal0.IN0
hex_number[3] => Equal1.IN1
hex_number[3] => Equal2.IN1
hex_number[3] => Equal3.IN2
hex_number[3] => Equal4.IN1
hex_number[3] => Equal5.IN2
hex_number[3] => Equal6.IN2
hex_number[3] => Equal7.IN3
hex_number[3] => Equal8.IN0
hex_number[3] => Equal9.IN0
hex_number[3] => Equal10.IN0
hex_number[3] => Equal11.IN0
hex_number[3] => Equal12.IN0
hex_number[3] => Equal13.IN0
hex_number[3] => Equal14.IN0
seven_seg_display[0] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[1] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[2] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[3] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[4] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[5] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[6] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE


|fill|updatePixel:inst|Hexadecimal_To_Seven_Segment:inst6
hex_number[0] => Equal0.IN3
hex_number[0] => Equal1.IN0
hex_number[0] => Equal2.IN3
hex_number[0] => Equal3.IN1
hex_number[0] => Equal4.IN3
hex_number[0] => Equal5.IN1
hex_number[0] => Equal6.IN3
hex_number[0] => Equal7.IN2
hex_number[0] => Equal8.IN1
hex_number[0] => Equal9.IN3
hex_number[0] => Equal10.IN2
hex_number[0] => Equal11.IN3
hex_number[0] => Equal12.IN2
hex_number[0] => Equal13.IN3
hex_number[0] => Equal14.IN3
hex_number[1] => Equal0.IN2
hex_number[1] => Equal1.IN3
hex_number[1] => Equal2.IN0
hex_number[1] => Equal3.IN0
hex_number[1] => Equal4.IN2
hex_number[1] => Equal5.IN3
hex_number[1] => Equal6.IN1
hex_number[1] => Equal7.IN1
hex_number[1] => Equal8.IN3
hex_number[1] => Equal9.IN1
hex_number[1] => Equal10.IN1
hex_number[1] => Equal11.IN2
hex_number[1] => Equal12.IN3
hex_number[1] => Equal13.IN2
hex_number[1] => Equal14.IN2
hex_number[2] => Equal0.IN1
hex_number[2] => Equal1.IN2
hex_number[2] => Equal2.IN2
hex_number[2] => Equal3.IN3
hex_number[2] => Equal4.IN0
hex_number[2] => Equal5.IN0
hex_number[2] => Equal6.IN0
hex_number[2] => Equal7.IN0
hex_number[2] => Equal8.IN2
hex_number[2] => Equal9.IN2
hex_number[2] => Equal10.IN3
hex_number[2] => Equal11.IN1
hex_number[2] => Equal12.IN1
hex_number[2] => Equal13.IN1
hex_number[2] => Equal14.IN1
hex_number[3] => Equal0.IN0
hex_number[3] => Equal1.IN1
hex_number[3] => Equal2.IN1
hex_number[3] => Equal3.IN2
hex_number[3] => Equal4.IN1
hex_number[3] => Equal5.IN2
hex_number[3] => Equal6.IN2
hex_number[3] => Equal7.IN3
hex_number[3] => Equal8.IN0
hex_number[3] => Equal9.IN0
hex_number[3] => Equal10.IN0
hex_number[3] => Equal11.IN0
hex_number[3] => Equal12.IN0
hex_number[3] => Equal13.IN0
hex_number[3] => Equal14.IN0
seven_seg_display[0] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[1] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[2] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[3] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[4] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[5] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[6] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE


